###
# Build hdf4, hdf5 dependencies and cache them in a combined directory.
# See https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
# for information related to github runners.
###

name: Run MSYS2, MinGW64-based Tests


on: [ push ]

jobs:

  build-and-test:

    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:

      - uses: actions/checkout@v2
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: git mingw-w64-x86_64-toolchain automake libtool autoconf make cmake mingw-w64-x86_64-hdf5 unzip


#####
# One-Off CMake-based tests.
#####


      - name: (CMake) Perform out-of-directory build
        shell: bash -l {0}
        run: |
          mkdir build
          cd build
          cmake .. -DENABLE_DAP=TRUE -DENABLE_HDF5=TRUE -DENABLE_NCZARR=TRUE -D ENABLE_DAP_LONG_TESTS=TRUE -DCMAKE_PREFIX_PATH=/mingw64 -DHDF5_DIR=/mingw64/lib/cmake/hdf5

      - name: (CMake) Print Summary
        run: |
          cd build
          cat libnetcdf.settings

      - name: (CMake) Build All
        run: |
          cd build
          make -j 12
        if: ${{ success() }}

      - name: (CMake) Run Tests
        run: |
          cd build
          ctest --output-on-failure -j 12 .
        if: ${{ success() }}

      - name: (CMake) Verbose Output if CTest Failure
        run: |
          cd build
          ctest -j 12 --rerun-failed --output-on-failure -VV
        if: ${{ failure() }}

###
# Configure and build
###

      - name: (Autotools) Run autoconf
        run: autoreconf -if

      - name: (Autotools) Configure Build 
        run: ./configure --enable-hdf5 --enable-dap --disable-dap-remote-tests --disable-static --disable-plugins --disable-byterange --disable-dap-remote-tests --disable-logging
        if: ${{ success() }}

      - name: (Autotools) Look at config.log if error
        run: cat config.log
        if: ${{ failure() }}

      - name: (Autotools) Print Summary
        run: cat libnetcdf.settings

      - name: (Autotools) Build Library and Utilities
        run: make -j 8 LDFLAGS="-no-undefined -Wl,--export-all-symbols"
        if: ${{ success() }}

      - name: (Autotools) Build and Run Tests
        run: make check -j 8
        if: ${{ success() }}

