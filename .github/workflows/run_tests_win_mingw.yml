###
# Build hdf4, hdf5 dependencies and cache them in a combined directory.
# See https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
# for information related to github runners.
###

name: Run MSYS2, MinGW64-based Tests


on: [pull_request, workflow_dispatch]

jobs:

  build-and-test:

    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:

      - uses: actions/checkout@v2
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: git mingw-w64-x86_64-toolchain automake libtool autoconf make cmake mingw-w64-x86_64-hdf5 unzip mingw-w64-x86_64-libxml2 libcurl-devel curl libxml2-devel

###
# Set environmental variable
###

      - run: echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/lib/pkgconfig" >> $GITHUB_ENV

###
# Configure and build
###

      - name: Find libcurl.pc
        run: cd / && find . -name 'libcurl.pc'

      - name: Query libcurl 
        run: |
          echo "pkg-config libcurl --libs:"
          PKG_CONFIG_PATH=/usr/lib/pkgconfig pkg-config libcurl --libs
          echo "pkg-config libcurl --cflags"
          PKG_CONFIG_PATH=/usr/lib/pkgconfig pkg-config libcurl --cflags
          echo "curl-config --cflags:"
          curl-config --cflags
          echo "curl-config --libs"
          curl-config --libs

      - name: (Autotools) Run autoconf
        run: autoreconf -if

      - name: (Autotools) Configure Build
        run: CFLAGS="$(pkg-config libcurl --cflags) LDFLAGS=$(pkg-config libcurl --libs)" ./configure --enable-hdf5 --enable-dap --disable-dap-remote-tests --disable-static --disable-plugins --disable-byterange --disable-logging
        if: ${{ success() }}

      - name: (Autotools) Look at config.log if error
        run: cat config.log
        if: ${{ failure() }}

      - name: (Autotools) Print Summary
        run: cat libnetcdf.settings

      - name: (Autotools) Build Library and Utilities
        run: make -j 8 LDFLAGS="-no-undefined -Wl,--export-all-symbols $(pkg-config libcurl --libs)" CFLAGS="$(pkg-config libcurl --cflags)"
        if: ${{ success() }}

      - name: (Autotools) Build and Run Tests
        run: make check -j 8
        if: ${{ success() }}
